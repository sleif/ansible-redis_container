---
- name: Find uid of user
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  ansible.builtin.command: "id -u"
  register: _container_run_as_uid
  check_mode: false
  changed_when: false

- name: Set facts depending on podman_rootless
  ansible.builtin.set_fact:
    _container_storage_dir_base: "{{ container_storage_dir_base + '/' + podman_user + '/container_data'
      if podman_rootless | bool else container_storage_dir_base }}"
    _group: "{{ podman_group if podman_rootless | bool else 'root' }}"
    _owner: "{{ podman_user if podman_rootless | bool else 'root' }}"
    _systemd_scope: "{{ 'user' if podman_rootless | bool else 'system' }}"
    _systemd_service_files_dir: "{{ container_storage_dir_base + '/' + podman_user + '/.config/systemd/user/'
      if podman_rootless | bool else '/etc/systemd/system/' }}"
    _target: "{{ container_name }}"
    _xdg_runtime_dir: "/run/user/{{ _container_run_as_uid.stdout }}"
  changed_when: false

- name: Include role sleif.podman role_operation pod_create
  ansible.builtin.include_role:
    name: sleif.podman
    apply:
      tags:
        - podman_pod_create
  vars:
    role_operation: pod_create
  tags: always

- name: Start Redis container
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  containers.podman.podman_container:
    name: "{{ container_name }}"
    image: docker.io/redis:latest
    state: started
    pod: "{{ pod_name | default(omit) }}"
    restart_policy: always
    recreate: true
    # publish:
    #   - "6379:6379"
    network: "{{ podman_network_name }}"
    timezone: "local"
  register: _container_start_results

# - debug: var=_container_start_results

- name: Include role sleif.podman role_operation podman_generate_systemd
  ansible.builtin.include_role:
    name: sleif.podman
    apply:
      tags:
        - podman_generate_systemd
  vars:
    role_operation: podman_generate_systemd
    target: "{{ pod_name if pod_name is defined and pod_name | length > 0 else container_name }}"
  tags: always
